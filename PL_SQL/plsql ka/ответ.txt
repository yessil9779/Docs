CREATE OR REPLACE PACKAGE YESSIL_csv_pkg IS

 type t_csv is record
 (
  col_value varchar2(2000)
 );
 
  type t_csv_cols is record
 (
  QuotaAmount varchar2(2000),
  StartDate varchar2(2000),
  DAY varchar2(2000),
  Username varchar2(2000)
 );

type t_csv_table is table of t_csv;
type t_csv_cols_table is table of t_csv_cols;

function pipeCSV(clob_in clob,head in char) return t_csv_table pipelined;
function pipeCSV_toColumns(clob_in clob) return t_csv_cols_table pipelined;
function pipeCSV_cols_ver2(inpu t_csv_table) return t_csv_cols_table pipelined;
  
END YESSIL_csv_pkg;

-------------------------------------------------------------------------------------

create or replace package body YESSIL_csv_pkg as
-- Задание 1
function pipeCSV(clob_in clob,head in char) return t_csv_table pipelined as 
begin
  
if(head in ('Y','y')) then
  for rec in
  (            
             select regexp_substr(to_char(clob_in), '[^;]+', 1, rownum) col_value
            from dual
            where regexp_substr(to_char(clob_in), '[^;]+', 1, rownum) is not null
            connect by level <= length(regexp_replace(to_char(clob_in), '[^;]+')) + 1
  )
  loop
   pipe row (rec);  
  end loop;
else 
  for rec in
  ( 
      select col_value from 
      ( select rownum as n,regexp_substr(to_char(clob_in), '[^;]+', 1, rownum) col_value
                    from dual
                    where regexp_substr(to_char(clob_in), '[^;]+', 1, rownum) is not null
                    connect by level <= length(regexp_replace(to_char(clob_in), '[^;]+')) + 1 )
       where n <> 1  
  )
  loop
   pipe row (rec);  
  end loop;
end if;     
  
end;

-- Задание 2
function  pipeCSV_toColumns(clob_in clob) return t_csv_cols_table pipelined as 
begin

  for rec in
  ( 
       with tt as (select col_value as txt from 
               ( select rownum as n,regexp_substr(to_char(clob_in), '[^;]+', 1, rownum) col_value
                    from dual
                    where regexp_substr(to_char(clob_in), '[^;]+', 1, rownum) is not null
                    connect by level <= length(regexp_replace(to_char(clob_in), '[^;]+')) + 1 )
                where n <> 1 
                )
        select regexp_substr(txt, '[^,]+', 1, 1) QuotaAmount,
               regexp_substr(txt, '[^,]+', 1, 2) StartDate,
               regexp_substr(txt, '[^,]+', 1, 3) DAY,
               regexp_substr(txt, '[^,]+', 1, 4) Username
        from tt
  )
  loop
   pipe row (rec);  
  end loop; 
  
end;

-- Задание 3
function  pipeCSV_cols_ver2(inpu t_csv_table) return t_csv_cols_table pipelined as 
begin

  for rec in
  ( 
       with tt as (
                     select col_value txt from table(inpu)
                )
        select regexp_substr(txt, '[^,]+', 1, 1) QuotaAmount,
               regexp_substr(txt, '[^,]+', 1, 2) StartDate,
               regexp_substr(txt, '[^,]+', 1, 3) DAY,
               regexp_substr(txt, '[^,]+', 1, 4) Username
        from tt
  )
  loop
   pipe row (rec);  
  end loop; 
  
end;


end;

------------------------------------------------------------------------------------------------


 SELECT p.* FROM YESSIL_TAB_CSV c
 cross join table(YESSIL_CSV_PKG.pipeCSV(c.csv_content,'n')) p
 
 
 SELECT p.* FROM YESSIL_TAB_CSV c
 cross join table(YESSIL_CSV_PKG.pipeCSV_toColumns(c.csv_content)) p
 
  SELECT p.* FROM YESSIL_TAB_CSV c
 cross join table(YESSIL_CSV_PKG.pipeCSV_cols_ver2(YESSIL_CSV_PKG.pipeCSV(c.csv_content,'y'))) p

