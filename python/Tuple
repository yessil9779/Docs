* Кортеж — это упорядоченная и неизменяемая коллекция .
* Кортежи записываются в круглых скобках.
* Элементы кортежа упорядочены, неизменяемы и допускают дублирование значений.
* Элементы кортежа индексируются, первый элемент имеет индекс [0], второй элемент имеет индекс [1]и т. д.
------------------------------------------------------------
# Поскольку кортежи индексируются, они могут содержать элементы с одинаковым значением:
thistuple = ("apple", "banana", "cherry", "apple", "cherry")
print(thistuple)
------------------------------------------------------------ len
# Выведите количество элементов в кортеже:
thistuple = ("apple", "banana", "cherry")
print(len(thistuple))
------------------------------------------------------------ create tuple
# Чтобы создать кортеж только с одним элементом, вам необходимо добавить запятую после элемента, иначе Python не распознает его как кортеж.
thistuple = ("apple",)
print(type(thistuple))
#NOT a tuple
thistuple = ("apple")
print(type(thistuple))
# Использование метода tuple() для создания кортежа:
thistuple = tuple(("apple", "banana", "cherry")) # note the double round-brackets
print(thistuple)
------------------------------------------------------------
# Элементы кортежа могут иметь любой тип данных:
tuple1 = ("apple", "banana", "cherry")
tuple2 = (1, 5, 7, 9, 3)
tuple3 = (True, False, False)
tuple1 = ("abc", 34, True, 40, "male")
------------------------------------------------------------ Get
thistuple = ("apple", "banana", "cherry")
print(thistuple[1]) # banana
print(thistuple[-1]) # cherry
# Примечание. Поиск начнется с индекса 1 (включен) и закончится индексом 2 (не включен)
print(thistuple[1:2]) # При указании диапазона возвращаемым значением будет новый кортеж
# Если оставить начальное значение, диапазон начнется с первого элемента:
print(thistuple[:2])
# Если оставить конечное значение, диапазон продолжится до конца списка:
print(thistuple[2:])
------------------------------------------------------------ update
# Кортежи неизменяемы, то есть вы не можете изменять, добавлять или удалять элементы после создания кортежа.
# Но есть обходной путь. Вы можете преобразовать кортеж в список, изменить список и преобразовать его обратно в кортеж.
x = ("apple", "banana", "cherry")
y = list(x)
y[1] = "kiwi"
x = tuple(y)
print(x)
-----------
# Поскольку кортежи неизменяемы, у них нет встроенного append()метода, но есть и другие способы добавления элементов в кортеж.
# 1. Преобразование в список . Как и в случае с изменением кортежа, вы можете преобразовать его в список, добавить элементы и преобразовать его обратно в кортеж.
thistuple = ("apple", "banana", "cherry")
y = list(thistuple)
y.append("orange")
thistuple = tuple(y)
# 2. Добавьте кортеж в кортеж . Вам разрешено добавлять кортежи к кортежам, поэтому, если вы хотите добавить один элемент (или несколько), создайте новый кортеж с элементами и добавьте его в существующий кортеж:
thistuple = ("apple", "banana", "cherry")
y = ("orange",)
thistuple += y
print(thistuple)
------------------------------------------------------------ unpack
# в Python нам также разрешено извлекать значения обратно в переменные. Это называется «распаковка»:
fruits = ("apple", "banana", "cherry")
(green, yellow, red) = fruits
print(green,yellow,red)
# Если количество переменных меньше количества значений, вы можете добавить *к имени переменной и значения будут присвоены переменной в виде списка:
fruits = ("apple", "banana", "cherry", "strawberry", "raspberry")
(green, yellow, *red) = fruits
print(green,yellow,red)
# Если звездочка добавлена ​​к другому имени переменной, отличному от последнего, Python будет присваивать значения переменной до тех пор, пока количество оставшихся значений не совпадет с количеством оставшихся переменных.
fruits = ("apple", "mango", "papaya", "pineapple", "cherry")
(green, *tropic, red) = fruits
print(green,tropic,red)
------------------------------------------------------------ loop
thistuple = ("apple", "banana", "cherry")
for x in thistuple:
  print(x)
-----------
thistuple = ("apple", "banana", "cherry")
for i in range(len(thistuple)):
  print(thistuple[i])
------------------------------------------------------------ join
# Объедините два кортежа:
tuple1 = ("a", "b" , "c")
tuple2 = (1, 2, 3)
tuple3 = tuple1 + tuple2
print(tuple3)
-----------
# Умножение кортеж фруктов на 2:
fruits = ("apple", "banana", "cherry")
mytuple = fruits * 2
print(mytuple)
------------------------------------------------------------ all methods
count()	-- Returns the number of times a specified value occurs in a tuple
index()	-- Searches the tuple for a specified value and returns the position of where it was found
